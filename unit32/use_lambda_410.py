# 람다 표현식 사용하기

""" 람다 표현식은 식 형태로 되어 있다고 해서 람다 표현식(lambda expression)이라고 부른다.
    특히 람다 표현식은 함수를 간편하게 작성할 수 있어서 다른 함수의 인수를 넣을 때 주로 사용한다."""



# 람다 표현식으로 함수 만들기

""" 람다 표현식을 사용하기 전에 먼저 숫자를 받은 뒤 10을 더해서 반환하는 함수 plus_ten을 만들어보겠다."""


def plus_ten(x):
    return x+10

print(plus_ten(1))


""" 그럼 이 plus_ten 함수를 람다 표현식으로 작성해보겠다. 람다 표현식은 다음과 같이 lambda에 매개변수를 지정하고
    :(콜론) 뒤에 반환값으로 사용할 식을 지정한다.
    
    
        * lambda 매개변수들: 식
    
    """


print(lambda x:x+10)
# <function <lambda> at 0x0000028ED7A0CE00>


""" 실행을 해보면 함수 객체가 나오는데, 이 상태로는 함수를 호출할 수 없다. 왜냐함녀 람다 표현식은 이름이 없는 함수이기
    때문이다. 그래서 람다 표현식을 익명 함수(anonymous function)이라고 한다.
    
    lambda로 만든 익명 함수를 호출하려면 다음과 같이 람다 표현식을 변수에 할당해주면 된다.

    """

plus_ten=lambda x:x+10
print(plus_ten(1))


""" 이제 람다 표현식을 살펴보면 lambda x:x+10은 매개변수 x 하나를 받고, x에 10을 더해서 반환한다는 뜻이다. 즉, 매개변수, 연산자,
    값 등을 조합한 식으로 반환값을 만드는 방식이다. 다음 그림과 같이 def 만든 함수와 비교해보면 쉽게 알 수 있다."""



# 람다 표현식 자체를 호출하기

""" 람다 표현식은 변수에 할당하지 않고 람다 표현식 자체를 바로 호출할 수 있다. 다음과 같이 람다 표현식을 ()(괄호)로 묶은 뒤에 다시 ()를
    붙이고 묶은 뒤에 다시 ()를 붙이고 인수를 넣어서 호풀하면 된다.
    
    *(lambda 매개변수들: 식)(인수들)
    
    """

print((lambda x:x+10)(1))
# 11



# 람다 표현식 안에서는 변수를 만들 수 없다.

""" 람다 표현식에서 주의할 점은 람다 표현식 안에서는 새 변수를 만들 수 없다는 점이다. 따라서 반환값 부분은 변수 없이 식 한 줄로 표현할 수 있어야
    한다.
    
    # 잘못된 예시

    (lambda x:y =10; x+y)(1)
    
    
    """


""" 람다 표현식 바깥에 있는 변수는 사용할 수 있다. 다음은 매개변수 x와 람다 표현식 바깥에 있는 변수 y를 더해서 반환한다."""

y=10
print((lambda x:x+y)(1))
# 11




# 람다 표현식을 인수로 사용하기


""" 람다 표현식을 사용하는 이유는 함수의 인수 부분에서 간단하게 함수를 만들기 위해서이다. 이런 방식으로 사용하는 대표적인 예가 map이다."""


""" 다음과 같이 숫자를 받은 뒤 10을 더해서 반환하는 함수 plus_ten을 작성한다. 그리고 map에 plus_ten을 작성한다. 그리고 map에 plus_tem 함수와 리스트
    [1,2,3]을 넣는다. 물론 map의 plus_ten 함수와 리스트 [1,2,3]을 넣는다. 물론 map의 결과는 map 객체이므로 눈으로 확인할 수 있도록 list를 사용해서
    리스트로 변환한다."""


def plus_ten(x):
    return x+10

print(list(map(plus_ten,[1,2,3])))
# [11, 12, 13]

""" plus_ten 함수는 매개변수 x에 10을 더해서 반환하므로 리스트 [1,2,3]이 [11,12,13]으로 바뀌었다. 지금까지 map을 사용할 때 map(str,[1,2,3])와 같이
    자료형 int, float, str 등을 넣었다. 사실 plus_ten 처럼 함수를 직접 만들어서 넣어도 된다."""


print(list(map(lambda x:x+10,[1,2,3])))
# [11, 12, 13]



""" plust_ten 함수 대신 람다 표현식 lambda x:x+10 을 넣었다. 전체적으로 보면 코드가 세 줄에서 한 줄로 줄었다. 이처럼 람다 표현식은 함수를 다른 함수의 인수로 
    넣었을 때 매우 편리하다."""






